{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: [...products],\n    showGridlines: true,\n    emptyMessage: 'Aucune donnée disponible',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      sortField: '',\n      sortOrder: 1,\n      key: 'basic'\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [emptyMessage]=\"emptyMessage\"\n                [attr.data-key]=\"key\"\n                >\n        <ng-template #header>\n          <tr>\n            <th [rxSortableColumn]=\"'name'\">\n              Nom\n              <span rxSortIcon=\"name\"></span>\n            </th>\n            <th [rxSortableColumn]=\"'category'\">\n              Catégorie\n              <span rxSortIcon=\"category\"></span>\n            </th>\n            <th [rxSortableColumn]=\"'price'\">\n              Prix\n              <span rxSortIcon=\"price\"></span>\n            </th>\n            <th>Quantité</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                "rawdescription": "Exemple de base avec tri des colonnes.\n\nCette story montre comment utiliser le composant RxTable avec le tri des colonnes.\nLes colonnes \"Nom\", \"Catégorie\" et \"Prix\" sont triables.",
                "description": "<p>Exemple de base avec tri des colonnes.</p>\n<p>Cette story montre comment utiliser le composant RxTable avec le tri des colonnes.\nLes colonnes &quot;Nom&quot;, &quot;Catégorie&quot; et &quot;Prix&quot; sont triables.</p>\n"
            },
            {
                "name": "ColorShowcase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    template: `\n      <div style=\"display: flex; gap: 16px; flex-wrap: wrap;\">\n        <rx-button *ngFor=\"let color of colors\"\n          [severity]=\"color\"\n          label=\"{{ color | titlecase }}\"\n          [disabled]=\"false\">\n        </rx-button>\n      </div>\n    `,\n    props: {\n      colors: ['primary', 'secondary', 'success', 'error', 'warning', 'info', 'help', 'contrast'],\n    },\n  }),\n}"
            },
            {
                "name": "ColorShowcase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/toast/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    messages: messages\n  },\n  render: (args) => ({\n    template: `\n      <rx-toast [messages]=\"messages\">\n      </rx-toast>\n    `,\n    props: {\n      ...args,\n      messages: [\n        {\n          title: 'Success',\n          content: 'This is a success toast notification.',\n          severity: 'success'\n        },\n        {\n          title: 'Warning',\n          content: 'This is a warning toast notification.',\n          severity: 'warning'\n        },\n        {\n          title: 'Error',\n          content: 'This is an error toast notification.',\n          severity: 'error'\n        },\n        {\n          title: 'Info',\n          content: 'This is an info toast notification.',\n          severity: 'info'\n        },\n        {\n          title: 'Secondary',\n          content: 'This is a secondary toast notification.',\n          severity: 'secondary'\n        },\n        {\n          title: 'Contrast',\n          content: 'This is a contrast toast notification.',\n          severity: 'contrast'\n        }\n      ]\n    }\n  }),\n  parameters: {\n    docs: {\n      storyDescription: 'Showcases different severity types of toast notifications for visual differentiation.'\n    }\n  }\n}"
            },
            {
                "name": "ConfirmDialog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-button (click)=\"pop.showConfirmDialog()\" [label]=\"'Open Confirm Dialog'\"></rx-button>\n        <rx-dialog #pop [confirmDialog]=\"true\" [label]=\"'Confirm Action'\">\n          <p>Are you sure you want to proceed?</p>\n        </rx-dialog>\n      `,\n    };\n  },\n}"
            },
            {
                "name": "ConfirmTemplateDialog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-button (click)=\"pop.showConfirmDialog()\" [label]=\"'Open Confirm Dialog'\"></rx-button>\n        <rx-dialog #pop [confirmDialog]=\"true\" [label]=\"'Confirm Action'\">\n          <p>Are you sure you want to proceed?</p>\n          <ng-template #confirm>\n            <rx-button [severity]=\"'contrast'\" (click)=\"pop.cancel()\"\n              >Cancel</rx-button\n            >\n            <rx-button [severity]=\"'error'\" (click)=\"pop.confirm()\"\n              >Delete</rx-button\n            >\n          </ng-template>\n        </rx-dialog>\n      `,\n    };\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-avatar label=\"X\"></rx-avatar>\n      `\n    };\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Primary',\n    severity: 'primary',\n    disabled: false,\n    loading: false,\n    hidden: false,\n    noStyle: false,\n    type: 'button'\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-card>\n          <h1>This is a card</h1>\n          <p>content</p>\n          <h4>footer</h4>\n        </rx-card>\n      `\n    };\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-button (click)=\"pop.toggle()\" [label]=\"'Open a modal'\"></rx-button>\n        <rx-dialog #pop (visibleChange)=\"true\">\n          <p style=\"width: 900px\">This is a modal dialog</p>\n        </rx-dialog>\n      `,\n    };\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <rx-layout>\n        <rx-header [$style]=\"'background-color:blue'\">Header</rx-header>\n        <rx-sidebar [visible]=\"true\" [$style]=\"'background-color:red'\">\n          Sidebar\n        </rx-sidebar>\n        <rx-main [$style]=\"'background-color:red'\">\n          Main Content\n        </rx-main>\n        <rx-footer [$style]=\"'background-color:yellow'\">Footer</rx-footer>\n      </rx-layout>\n    `,\n    props: {\n      view: 'hhh scc fff'\n    }\n  })\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <rx-button (click)=\"op.toggle($event, button)\" [label]=\"'Open a modal'\"></rx-button>\n      <rx-popover #op [$height]=\"'200px'\" [$width]=\"'50%'\">\n        <h1>Popover</h1>\n        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\n        when an unknown printer took a galley of type and scrambled it to make a type specimen book</p>\n      </rx-popover>\n    `\n  })\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/toast/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    messages: messages\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      messages: messages\n    },\n    template: `\n      <rx-toast [messages]=\"messages\"></rx-toast>\n    `\n  }),\n  parameters: {\n    docs: {\n      storyDescription: 'The default toast notification displays a success message.'\n    }\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Disabled',\n    severity: 'primary',\n    disabled: true,\n    loading: false,\n  },\n}"
            },
            {
                "name": "EmptyTable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: [],\n    showGridlines: true,\n    emptyMessage: 'Aucune donnée disponible',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [emptyMessage]=\"emptyMessage\">\n        <ng-template #header>\n          <tr>\n            <th>Nom</th>\n            <th>Catégorie</th>\n            <th>Prix</th>\n            <th>Quantité</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                "rawdescription": "Exemple de table vide.\n\nCette story montre comment le composant RxTable gère l'absence de données.\nUn message personnalisable est affiché lorsque le tableau est vide.",
                "description": "<p>Exemple de table vide.</p>\n<p>Cette story montre comment le composant RxTable gère l&#39;absence de données.\nUn message personnalisable est affiché lorsque le tableau est vide.</p>\n"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      model: items,\n      direction: 'column'\n    },\n    template: `\n      <rx-menubar [model]=\"model\" [direction]=\"direction\"></rx-menubar>\n    `,\n  }),\n}"
            },
            {
                "name": "MenuBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      model: items\n    },\n    template: `\n      <rx-menubar [model]=\"model\"></rx-menubar>\n    `,\n  }),\n}"
            },
            {
                "name": "messages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/toast/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ToastMessage[]",
                "defaultValue": "[\n  {\n    severity: 'success',\n    title: 'Success!',\n    content: 'This is a success toast notification.'\n  }\n]"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxAvatar>",
                "defaultValue": "{\n  title: 'Misc/RxAvatar',\n  component: RxAvatar,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n      ],\n    }),\n    applicationConfig({\n      providers: [\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxCard>",
                "defaultValue": "{\n  title: 'Panel/RxCard',\n  component: RxCard,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n      ],\n    }),\n    applicationConfig({\n      providers: [\n      ]\n    })\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxDialog>",
                "defaultValue": "{\n  title: 'Overlay/RxDialog',\n  component: RxDialog,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RxButton],\n    }),\n    applicationConfig({\n      providers: [],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxIcon>",
                "defaultValue": "{\n  title: 'Misc/RxIcon',\n  component: RxIcon,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: []\n    }),\n    applicationConfig({\n      providers: [],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxImage>",
                "defaultValue": "{\n  title: 'Overlay/Image',\n  component: RxImage,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: []\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxLayout>",
                "defaultValue": "{\n  title: 'Layout/RxLayout',\n  component: RxLayout,\n  tags: ['autodocs'],\n  argTypes: {\n    container: {\n      control: 'boolean',\n      description: 'Définit si le layout est containerisé ou non.',\n    },\n    view: {\n      control: 'text',\n      description: 'Définit la structure du layout sous la forme \"header body footer\".',\n    },\n  },\n  args: {\n    view: 'hhh scc fff'\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: `\nLe composant **RxLayout** permet de structurer une page avec des zones configurables via \\`view\\`.\nPar exemple : \"header body footer\".\nL'attribut \\`container\\` définit si le layout est en mode containerisé.\n        `,\n      },\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RxLayout,\n        RxHeader,\n        RxSidebar,\n        RxMainContent,\n        RxFooter,\n        CommonModule\n      ],\n      providers: []\n    }),\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxMenuBar>",
                "defaultValue": "{\n  title: 'Menu/RxMenuBar',\n  component: RxMenuBar,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RxButton, BrowserAnimationsModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxPopover>",
                "defaultValue": "{\n  title: 'Overlay/RxPopover',\n  component: RxPopover,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RxButton,\n        BrowserAnimationsModule\n      ],\n    }),\n  ]\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RxTable>",
                "defaultValue": "{\n  title: 'Data/RxTable',\n  component: RxTable,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        NgFor,\n        NgIf,\n        DecimalPipe,\n        RxSortableColumn,\n        RxSortIcon,\n        RxSelectableRow,\n      ],\n    }),\n  ],\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'Un composant de tableau avancé avec tri et sélection.',\n      },\n    }\n  },\n  argTypes: {\n    value: {\n      description: 'Les données à afficher dans le tableau',\n      control: 'object',\n      table: {\n        type: { summary: 'any[]' },\n        defaultValue: { summary: '[]' },\n      },\n    },\n    showGridlines: {\n      description: 'Affiche les bordures de grille',\n      control: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    selectionMode: {\n      description: 'Mode de sélection des lignes',\n      control: 'select',\n      options: [null, 'single', 'multiple'],\n      table: {\n        type: { summary: \"'single' | 'multiple' | null\" },\n        defaultValue: { summary: 'null' },\n      },\n    },\n    selection: {\n      description: 'Élément(s) sélectionné(s)',\n      control: 'object',\n      table: {\n        type: { summary: 'any | any[]' },\n        defaultValue: { summary: 'null' },\n      },\n    },\n    emptyMessage: {\n      description: 'Message à afficher lorsque le tableau est vide',\n      control: 'text',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: \"'Aucune donnée'\" },\n      },\n    },\n    selectionChange: {\n      description: 'Émis lorsque la sélection change',\n      table: {\n        type: { summary: 'EventEmitter<any | any[]>' },\n      },\n    },\n    sortData: {\n      description: 'Émis lorsque le tri est effectué',\n      table: {\n        type: { summary: 'EventEmitter<SortEvent>' },\n      },\n    },\n  },\n}"
            },
            {
                "name": "MultipleSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: [...products],\n    showGridlines: true,\n    selectionMode: 'multiple',\n    emptyMessage: 'Aucune donnée disponible',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [selectionMode]=\"'multiple'\"\n                [emptyMessage]=\"emptyMessage\">\n        <ng-template #header>\n          <tr>\n            <th style=\"width: 3rem\">Sélection</th>\n            <th>Nom</th>\n            <th>Catégorie</th>\n            <th>Prix</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                "rawdescription": "Exemple avec sélection multiple.\n\nCette story montre comment utiliser le composant RxTable avec la sélection multiple.\nLes utilisateurs peuvent sélectionner plusieurs lignes en utilisant des cases à cocher.",
                "description": "<p>Exemple avec sélection multiple.</p>\n<p>Cette story montre comment utiliser le composant RxTable avec la sélection multiple.\nLes utilisateurs peuvent sélectionner plusieurs lignes en utilisant des cases à cocher.</p>\n"
            },
            {
                "name": "NoSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: [...products],\n    showGridlines: true,\n    emptyMessage: 'Aucune donnée disponible',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [emptyMessage]=\"emptyMessage\">\n        <ng-template #header>\n          <tr>\n            <th>Nom</th>\n            <th>Catégorie</th>\n            <th>Prix</th>\n            <th>Quantité</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                "rawdescription": "Exemple sans sélection.\n\nCette story montre comment utiliser le composant RxTable sans fonctionnalité de sélection.\nC'est utile pour l'affichage simple de données tabulaires.",
                "description": "<p>Exemple sans sélection.</p>\n<p>Cette story montre comment utiliser le composant RxTable sans fonctionnalité de sélection.\nC&#39;est utile pour l&#39;affichage simple de données tabulaires.</p>\n"
            },
            {
                "name": "NoStyle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Loading',\n    severity: 'secondary',\n    disabled: false,\n    loading: false,\n    noStyle: true\n  },\n}"
            },
            {
                "name": "Pagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    value: [...products],\n    showGridlines: true,\n    emptyMessage: 'Aucune donnée disponible',\n    rows: 5,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      key: 'pagination'\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [emptyMessage]=\"emptyMessage\"\n                [attr.data-key]=\"key\"\n                [rows]=\"rows\">\n        <ng-template #header>\n          <tr>\n            <th>Nom</th>\n            <th>Catégorie</th>\n            <th>Prix</th>\n            <th>Quantité</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                "rawdescription": "Exemple de pagination.\n\nCette story montre comment utiliser le composant RxTable avec la pagination.\nLes utilisateurs peuvent naviguer entre les pages pour afficher les données.",
                "description": "<p>Exemple de pagination.</p>\n<p>Cette story montre comment utiliser le composant RxTable avec la pagination.\nLes utilisateurs peuvent naviguer entre les pages pour afficher les données.</p>\n"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    options: {\n      storySort: {\n        order: ['Introduction', '*'],\n      },\n    },\n    docs: {\n      disable: false\n    }\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideHttpClient(),\n        provideAnimations(),\n        provideAppInitializer(() => {\n          const _iconRegistry = inject(IconRegistryService);\n          _iconRegistry.initialize();\n        })\n      ]\n    })\n  ],\n\n  tags: [\"autodocs\"]\n}"
            },
            {
                "name": "ShrinkSidebar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <rx-layout [view]=\"view\" #layout>\n        <rx-header [$style]=\"'background-color:blue'\">\n          <button (click)=\"layout.onToggleSidebar()\">Toggle Sidebar</button>\n        </rx-header>\n        <rx-sidebar [visible]=\"sidebarVisible()\" [shrink]=\"shrink\" [$style]=\"'background-color:red'\">\n          Sidebar\n        </rx-sidebar>\n        <rx-main [$style]=\"'background-color:green'\">\n          Main Content\n        </rx-main>\n        <rx-footer [$style]=\"'background-color:yellow'\">Footer</rx-footer>\n      </rx-layout>\n    `,\n    props: {\n      sidebarVisible: signal(true),\n      view: 'shh scc sff',\n      shrink: true\n    }\n  })\n}"
            },
            {
                "name": "SimpleExemple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n    <div style=\"display: flex; gap: 5px;\">\n      <rx-icon [iconJson]=\"'home'\" />\n      <rx-icon [iconJson]=\"'eye'\" [stroke]=\"'red'\" />\n      <rx-icon [iconJson]=\"'info'\" [thickness]=\"'3'\" />\n      <rx-icon [iconJson]=\"'menu'\" [stroke]=\"'green'\" />\n      <rx-icon [iconJson]=\"'save'\" [fill]=\"'red'\" />\n    </div>\n    `\n  })\n}"
            },
            {
                "name": "ToggleSidebar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <rx-layout #layout [view]=\"view\">\n        <rx-header [$style]=\"'background-color:blue'\">\n          <button (click)=\"layout.onToggleSidebar()\">Toggle Sidebar</button>\n        </rx-header>\n        <rx-sidebar [visible]=\"sidebarVisible()\" [$style]=\"'background-color:red'\">\n          Sidebar\n        </rx-sidebar>\n        <rx-main [$style]=\"'background-color:green'\">\n          Main Content\n        </rx-main>\n        <rx-footer [$style]=\"'background-color:yellow'\">Footer</rx-footer>\n      </rx-layout>\n    `,\n    props: {\n      view: 'hhh scc fff',\n      sidebarVisible: signal(true)\n    }\n  })\n}"
            },
            {
                "name": "WithPreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/remanx/components/src/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `<rx-image [src]=\"'https://primefaces.org/cdn/primeng/images/galleria/galleria10.jpg'\" [preview]=\"true\" />`\n  })\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxAvatar>",
                "file": "projects/remanx/components/src/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxButton>",
                "file": "projects/remanx/components/src/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxCard>",
                "file": "projects/remanx/components/src/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxDialog>",
                "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxIcon>",
                "file": "projects/remanx/components/src/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxImage>",
                "file": "projects/remanx/components/src/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxLayout>",
                "file": "projects/remanx/components/src/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxMenuBar>",
                "file": "projects/remanx/components/src/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxPopover>",
                "file": "projects/remanx/components/src/popover/popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxTable>",
                "file": "projects/remanx/components/src/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RxToast>",
                "file": "projects/remanx/components/src/toast/toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/remanx/components/src/table/table.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: [...products],\n    showGridlines: true,\n    emptyMessage: 'Aucune donnée disponible',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      sortField: '',\n      sortOrder: 1,\n      key: 'basic'\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [emptyMessage]=\"emptyMessage\"\n                [attr.data-key]=\"key\"\n                >\n        <ng-template #header>\n          <tr>\n            <th [rxSortableColumn]=\"'name'\">\n              Nom\n              <span rxSortIcon=\"name\"></span>\n            </th>\n            <th [rxSortableColumn]=\"'category'\">\n              Catégorie\n              <span rxSortIcon=\"category\"></span>\n            </th>\n            <th [rxSortableColumn]=\"'price'\">\n              Prix\n              <span rxSortIcon=\"price\"></span>\n            </th>\n            <th>Quantité</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                    "rawdescription": "Exemple de base avec tri des colonnes.\n\nCette story montre comment utiliser le composant RxTable avec le tri des colonnes.\nLes colonnes \"Nom\", \"Catégorie\" et \"Prix\" sont triables.",
                    "description": "<p>Exemple de base avec tri des colonnes.</p>\n<p>Cette story montre comment utiliser le composant RxTable avec le tri des colonnes.\nLes colonnes &quot;Nom&quot;, &quot;Catégorie&quot; et &quot;Prix&quot; sont triables.</p>\n"
                },
                {
                    "name": "EmptyTable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: [],\n    showGridlines: true,\n    emptyMessage: 'Aucune donnée disponible',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [emptyMessage]=\"emptyMessage\">\n        <ng-template #header>\n          <tr>\n            <th>Nom</th>\n            <th>Catégorie</th>\n            <th>Prix</th>\n            <th>Quantité</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                    "rawdescription": "Exemple de table vide.\n\nCette story montre comment le composant RxTable gère l'absence de données.\nUn message personnalisable est affiché lorsque le tableau est vide.",
                    "description": "<p>Exemple de table vide.</p>\n<p>Cette story montre comment le composant RxTable gère l&#39;absence de données.\nUn message personnalisable est affiché lorsque le tableau est vide.</p>\n"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxTable>",
                    "defaultValue": "{\n  title: 'Data/RxTable',\n  component: RxTable,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        NgFor,\n        NgIf,\n        DecimalPipe,\n        RxSortableColumn,\n        RxSortIcon,\n        RxSelectableRow,\n      ],\n    }),\n  ],\n  tags: ['autodocs'],\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: 'Un composant de tableau avancé avec tri et sélection.',\n      },\n    }\n  },\n  argTypes: {\n    value: {\n      description: 'Les données à afficher dans le tableau',\n      control: 'object',\n      table: {\n        type: { summary: 'any[]' },\n        defaultValue: { summary: '[]' },\n      },\n    },\n    showGridlines: {\n      description: 'Affiche les bordures de grille',\n      control: 'boolean',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: 'false' },\n      },\n    },\n    selectionMode: {\n      description: 'Mode de sélection des lignes',\n      control: 'select',\n      options: [null, 'single', 'multiple'],\n      table: {\n        type: { summary: \"'single' | 'multiple' | null\" },\n        defaultValue: { summary: 'null' },\n      },\n    },\n    selection: {\n      description: 'Élément(s) sélectionné(s)',\n      control: 'object',\n      table: {\n        type: { summary: 'any | any[]' },\n        defaultValue: { summary: 'null' },\n      },\n    },\n    emptyMessage: {\n      description: 'Message à afficher lorsque le tableau est vide',\n      control: 'text',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: \"'Aucune donnée'\" },\n      },\n    },\n    selectionChange: {\n      description: 'Émis lorsque la sélection change',\n      table: {\n        type: { summary: 'EventEmitter<any | any[]>' },\n      },\n    },\n    sortData: {\n      description: 'Émis lorsque le tri est effectué',\n      table: {\n        type: { summary: 'EventEmitter<SortEvent>' },\n      },\n    },\n  },\n}"
                },
                {
                    "name": "MultipleSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: [...products],\n    showGridlines: true,\n    selectionMode: 'multiple',\n    emptyMessage: 'Aucune donnée disponible',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [selectionMode]=\"'multiple'\"\n                [emptyMessage]=\"emptyMessage\">\n        <ng-template #header>\n          <tr>\n            <th style=\"width: 3rem\">Sélection</th>\n            <th>Nom</th>\n            <th>Catégorie</th>\n            <th>Prix</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                    "rawdescription": "Exemple avec sélection multiple.\n\nCette story montre comment utiliser le composant RxTable avec la sélection multiple.\nLes utilisateurs peuvent sélectionner plusieurs lignes en utilisant des cases à cocher.",
                    "description": "<p>Exemple avec sélection multiple.</p>\n<p>Cette story montre comment utiliser le composant RxTable avec la sélection multiple.\nLes utilisateurs peuvent sélectionner plusieurs lignes en utilisant des cases à cocher.</p>\n"
                },
                {
                    "name": "NoSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: [...products],\n    showGridlines: true,\n    emptyMessage: 'Aucune donnée disponible',\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [emptyMessage]=\"emptyMessage\">\n        <ng-template #header>\n          <tr>\n            <th>Nom</th>\n            <th>Catégorie</th>\n            <th>Prix</th>\n            <th>Quantité</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                    "rawdescription": "Exemple sans sélection.\n\nCette story montre comment utiliser le composant RxTable sans fonctionnalité de sélection.\nC'est utile pour l'affichage simple de données tabulaires.",
                    "description": "<p>Exemple sans sélection.</p>\n<p>Cette story montre comment utiliser le composant RxTable sans fonctionnalité de sélection.\nC&#39;est utile pour l&#39;affichage simple de données tabulaires.</p>\n"
                },
                {
                    "name": "Pagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    value: [...products],\n    showGridlines: true,\n    emptyMessage: 'Aucune donnée disponible',\n    rows: 5,\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      key: 'pagination'\n    },\n    template: `\n      <rx-table [value]=\"value\"\n                [showGridlines]=\"showGridlines\"\n                [emptyMessage]=\"emptyMessage\"\n                [attr.data-key]=\"key\"\n                [rows]=\"rows\">\n        <ng-template #header>\n          <tr>\n            <th>Nom</th>\n            <th>Catégorie</th>\n            <th>Prix</th>\n            <th>Quantité</th>\n            <th>Statut</th>\n          </tr>\n        </ng-template>\n        <ng-template #body let-item>\n          <tr>\n            <td>{{item.name}}</td>\n            <td>{{item.category}}</td>\n            <td>{{item.price | number:'1.2-2'}} €</td>\n            <td>{{item.quantity}}</td>\n            <td>{{item.inventoryStatus}}</td>\n          </tr>\n        </ng-template>\n      </rx-table>\n    `,\n  }),\n}",
                    "rawdescription": "Exemple de pagination.\n\nCette story montre comment utiliser le composant RxTable avec la pagination.\nLes utilisateurs peuvent naviguer entre les pages pour afficher les données.",
                    "description": "<p>Exemple de pagination.</p>\n<p>Cette story montre comment utiliser le composant RxTable avec la pagination.\nLes utilisateurs peuvent naviguer entre les pages pour afficher les données.</p>\n"
                }
            ],
            "projects/remanx/components/src/button/button.stories.ts": [
                {
                    "name": "ColorShowcase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    template: `\n      <div style=\"display: flex; gap: 16px; flex-wrap: wrap;\">\n        <rx-button *ngFor=\"let color of colors\"\n          [severity]=\"color\"\n          label=\"{{ color | titlecase }}\"\n          [disabled]=\"false\">\n        </rx-button>\n      </div>\n    `,\n    props: {\n      colors: ['primary', 'secondary', 'success', 'error', 'warning', 'info', 'help', 'contrast'],\n    },\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Primary',\n    severity: 'primary',\n    disabled: false,\n    loading: false,\n    hidden: false,\n    noStyle: false,\n    type: 'button'\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Disabled',\n    severity: 'primary',\n    disabled: true,\n    loading: false,\n  },\n}"
                },
                {
                    "name": "NoStyle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Loading',\n    severity: 'secondary',\n    disabled: false,\n    loading: false,\n    noStyle: true\n  },\n}"
                }
            ],
            "projects/remanx/components/src/toast/toast.stories.ts": [
                {
                    "name": "ColorShowcase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/toast/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    messages: messages\n  },\n  render: (args) => ({\n    template: `\n      <rx-toast [messages]=\"messages\">\n      </rx-toast>\n    `,\n    props: {\n      ...args,\n      messages: [\n        {\n          title: 'Success',\n          content: 'This is a success toast notification.',\n          severity: 'success'\n        },\n        {\n          title: 'Warning',\n          content: 'This is a warning toast notification.',\n          severity: 'warning'\n        },\n        {\n          title: 'Error',\n          content: 'This is an error toast notification.',\n          severity: 'error'\n        },\n        {\n          title: 'Info',\n          content: 'This is an info toast notification.',\n          severity: 'info'\n        },\n        {\n          title: 'Secondary',\n          content: 'This is a secondary toast notification.',\n          severity: 'secondary'\n        },\n        {\n          title: 'Contrast',\n          content: 'This is a contrast toast notification.',\n          severity: 'contrast'\n        }\n      ]\n    }\n  }),\n  parameters: {\n    docs: {\n      storyDescription: 'Showcases different severity types of toast notifications for visual differentiation.'\n    }\n  }\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/toast/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    messages: messages\n  },\n  render: (args) => ({\n    props: {\n      ...args,\n      messages: messages\n    },\n    template: `\n      <rx-toast [messages]=\"messages\"></rx-toast>\n    `\n  }),\n  parameters: {\n    docs: {\n      storyDescription: 'The default toast notification displays a success message.'\n    }\n  }\n}"
                },
                {
                    "name": "messages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/toast/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToastMessage[]",
                    "defaultValue": "[\n  {\n    severity: 'success',\n    title: 'Success!',\n    content: 'This is a success toast notification.'\n  }\n]"
                }
            ],
            "projects/remanx/components/src/dialog/dialog.stories.ts": [
                {
                    "name": "ConfirmDialog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-button (click)=\"pop.showConfirmDialog()\" [label]=\"'Open Confirm Dialog'\"></rx-button>\n        <rx-dialog #pop [confirmDialog]=\"true\" [label]=\"'Confirm Action'\">\n          <p>Are you sure you want to proceed?</p>\n        </rx-dialog>\n      `,\n    };\n  },\n}"
                },
                {
                    "name": "ConfirmTemplateDialog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-button (click)=\"pop.showConfirmDialog()\" [label]=\"'Open Confirm Dialog'\"></rx-button>\n        <rx-dialog #pop [confirmDialog]=\"true\" [label]=\"'Confirm Action'\">\n          <p>Are you sure you want to proceed?</p>\n          <ng-template #confirm>\n            <rx-button [severity]=\"'contrast'\" (click)=\"pop.cancel()\"\n              >Cancel</rx-button\n            >\n            <rx-button [severity]=\"'error'\" (click)=\"pop.confirm()\"\n              >Delete</rx-button\n            >\n          </ng-template>\n        </rx-dialog>\n      `,\n    };\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-button (click)=\"pop.toggle()\" [label]=\"'Open a modal'\"></rx-button>\n        <rx-dialog #pop (visibleChange)=\"true\">\n          <p style=\"width: 900px\">This is a modal dialog</p>\n        </rx-dialog>\n      `,\n    };\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxDialog>",
                    "defaultValue": "{\n  title: 'Overlay/RxDialog',\n  component: RxDialog,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RxButton],\n    }),\n    applicationConfig({\n      providers: [],\n    }),\n  ],\n}"
                }
            ],
            "projects/remanx/components/src/avatar/avatar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-avatar label=\"X\"></rx-avatar>\n      `\n    };\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxAvatar>",
                    "defaultValue": "{\n  title: 'Misc/RxAvatar',\n  component: RxAvatar,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n      ],\n    }),\n    applicationConfig({\n      providers: [\n      ]\n    })\n  ]\n}"
                }
            ],
            "projects/remanx/components/src/card/card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => {\n    return {\n      template: `\n        <rx-card>\n          <h1>This is a card</h1>\n          <p>content</p>\n          <h4>footer</h4>\n        </rx-card>\n      `\n    };\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxCard>",
                    "defaultValue": "{\n  title: 'Panel/RxCard',\n  component: RxCard,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n      ],\n    }),\n    applicationConfig({\n      providers: [\n      ]\n    })\n  ]\n}"
                }
            ],
            "projects/remanx/components/src/layout/layout.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <rx-layout>\n        <rx-header [$style]=\"'background-color:blue'\">Header</rx-header>\n        <rx-sidebar [visible]=\"true\" [$style]=\"'background-color:red'\">\n          Sidebar\n        </rx-sidebar>\n        <rx-main [$style]=\"'background-color:red'\">\n          Main Content\n        </rx-main>\n        <rx-footer [$style]=\"'background-color:yellow'\">Footer</rx-footer>\n      </rx-layout>\n    `,\n    props: {\n      view: 'hhh scc fff'\n    }\n  })\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxLayout>",
                    "defaultValue": "{\n  title: 'Layout/RxLayout',\n  component: RxLayout,\n  tags: ['autodocs'],\n  argTypes: {\n    container: {\n      control: 'boolean',\n      description: 'Définit si le layout est containerisé ou non.',\n    },\n    view: {\n      control: 'text',\n      description: 'Définit la structure du layout sous la forme \"header body footer\".',\n    },\n  },\n  args: {\n    view: 'hhh scc fff'\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: `\nLe composant **RxLayout** permet de structurer une page avec des zones configurables via \\`view\\`.\nPar exemple : \"header body footer\".\nL'attribut \\`container\\` définit si le layout est en mode containerisé.\n        `,\n      },\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RxLayout,\n        RxHeader,\n        RxSidebar,\n        RxMainContent,\n        RxFooter,\n        CommonModule\n      ],\n      providers: []\n    }),\n  ]\n}"
                },
                {
                    "name": "ShrinkSidebar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <rx-layout [view]=\"view\" #layout>\n        <rx-header [$style]=\"'background-color:blue'\">\n          <button (click)=\"layout.onToggleSidebar()\">Toggle Sidebar</button>\n        </rx-header>\n        <rx-sidebar [visible]=\"sidebarVisible()\" [shrink]=\"shrink\" [$style]=\"'background-color:red'\">\n          Sidebar\n        </rx-sidebar>\n        <rx-main [$style]=\"'background-color:green'\">\n          Main Content\n        </rx-main>\n        <rx-footer [$style]=\"'background-color:yellow'\">Footer</rx-footer>\n      </rx-layout>\n    `,\n    props: {\n      sidebarVisible: signal(true),\n      view: 'shh scc sff',\n      shrink: true\n    }\n  })\n}"
                },
                {
                    "name": "ToggleSidebar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <rx-layout #layout [view]=\"view\">\n        <rx-header [$style]=\"'background-color:blue'\">\n          <button (click)=\"layout.onToggleSidebar()\">Toggle Sidebar</button>\n        </rx-header>\n        <rx-sidebar [visible]=\"sidebarVisible()\" [$style]=\"'background-color:red'\">\n          Sidebar\n        </rx-sidebar>\n        <rx-main [$style]=\"'background-color:green'\">\n          Main Content\n        </rx-main>\n        <rx-footer [$style]=\"'background-color:yellow'\">Footer</rx-footer>\n      </rx-layout>\n    `,\n    props: {\n      view: 'hhh scc fff',\n      sidebarVisible: signal(true)\n    }\n  })\n}"
                }
            ],
            "projects/remanx/components/src/popover/popover.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <rx-button (click)=\"op.toggle($event, button)\" [label]=\"'Open a modal'\"></rx-button>\n      <rx-popover #op [$height]=\"'200px'\" [$width]=\"'50%'\">\n        <h1>Popover</h1>\n        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\n        when an unknown printer took a galley of type and scrambled it to make a type specimen book</p>\n      </rx-popover>\n    `\n  })\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxPopover>",
                    "defaultValue": "{\n  title: 'Overlay/RxPopover',\n  component: RxPopover,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RxButton,\n        BrowserAnimationsModule\n      ],\n    }),\n  ]\n}"
                }
            ],
            "projects/remanx/components/src/menubar/menubar.stories.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      model: items,\n      direction: 'column'\n    },\n    template: `\n      <rx-menubar [model]=\"model\" [direction]=\"direction\"></rx-menubar>\n    `,\n  }),\n}"
                },
                {
                    "name": "MenuBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      model: items\n    },\n    template: `\n      <rx-menubar [model]=\"model\"></rx-menubar>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxMenuBar>",
                    "defaultValue": "{\n  title: 'Menu/RxMenuBar',\n  component: RxMenuBar,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RxButton, BrowserAnimationsModule],\n    }),\n  ],\n}"
                }
            ],
            "projects/remanx/components/src/icon/icon.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxIcon>",
                    "defaultValue": "{\n  title: 'Misc/RxIcon',\n  component: RxIcon,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: []\n    }),\n    applicationConfig({\n      providers: [],\n    }),\n  ],\n}"
                },
                {
                    "name": "SimpleExemple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n    <div style=\"display: flex; gap: 5px;\">\n      <rx-icon [iconJson]=\"'home'\" />\n      <rx-icon [iconJson]=\"'eye'\" [stroke]=\"'red'\" />\n      <rx-icon [iconJson]=\"'info'\" [thickness]=\"'3'\" />\n      <rx-icon [iconJson]=\"'menu'\" [stroke]=\"'green'\" />\n      <rx-icon [iconJson]=\"'save'\" [fill]=\"'red'\" />\n    </div>\n    `\n  })\n}"
                }
            ],
            "projects/remanx/components/src/image/image.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RxImage>",
                    "defaultValue": "{\n  title: 'Overlay/Image',\n  component: RxImage,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: []\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(BrowserAnimationsModule)],\n    }),\n  ],\n}"
                },
                {
                    "name": "WithPreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/components/src/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `<rx-image [src]=\"'https://primefaces.org/cdn/primeng/images/galleria/galleria10.jpg'\" [preview]=\"true\" />`\n  })\n}"
                }
            ],
            "projects/remanx/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/remanx/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    options: {\n      storySort: {\n        order: ['Introduction', '*'],\n      },\n    },\n    docs: {\n      disable: false\n    }\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideHttpClient(),\n        provideAnimations(),\n        provideAppInitializer(() => {\n          const _iconRegistry = inject(IconRegistryService);\n          _iconRegistry.initialize();\n        })\n      ]\n    })\n  ],\n\n  tags: [\"autodocs\"]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/remanx/components/src/avatar/avatar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxAvatar>",
                    "file": "projects/remanx/components/src/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxButton>",
                    "file": "projects/remanx/components/src/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/card/card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxCard>",
                    "file": "projects/remanx/components/src/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/dialog/dialog.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxDialog>",
                    "file": "projects/remanx/components/src/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/icon/icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxIcon>",
                    "file": "projects/remanx/components/src/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/image/image.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxImage>",
                    "file": "projects/remanx/components/src/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/layout/layout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxLayout>",
                    "file": "projects/remanx/components/src/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/menubar/menubar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxMenuBar>",
                    "file": "projects/remanx/components/src/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/popover/popover.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxPopover>",
                    "file": "projects/remanx/components/src/popover/popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxTable>",
                    "file": "projects/remanx/components/src/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/remanx/components/src/toast/toast.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RxToast>",
                    "file": "projects/remanx/components/src/toast/toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 10,
        "status": "low",
        "files": [
            {
                "filePath": "projects/remanx/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/avatar/avatar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorShowcase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoStyle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/button/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/card/card.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ConfirmDialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ConfirmTemplateDialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/dialog/dialog.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleExemple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/icon/icon.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/image/image.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/image/image.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/image/image.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShrinkSidebar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ToggleSidebar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/layout/layout.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MenuBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/menubar/menubar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/popover/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/popover/popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/popover/popover.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/remanx/components/src/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmptyTable",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/remanx/components/src/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleSelection",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/remanx/components/src/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoSelection",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/remanx/components/src/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pagination",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/remanx/components/src/table/table.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/toast/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorShowcase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/toast/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/toast/toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "messages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/remanx/components/src/toast/toast.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}